{"version":3,"sources":["Types/Richtung.ts","Components/Coin.tsx","Components/Empty.tsx","Components/HorizontalWalls/HorizontalWall.tsx","Components/HorizontalWalls/HorizontalWallRightSideShort.tsx","Components/HorizontalWalls/HorizontalWallLeftSideShort.tsx","Components/VerticalWalls/VerticalWall.tsx","Components/VerticalWalls/VerticalWallTopShort.tsx","Components/VerticalWalls/VerticalWallBottomShort.tsx","Components/TPieces/TPieceBottom.tsx","Components/TPieces/TPieceTop.tsx","Components/TPieces/TPieceRight.tsx","Components/TPieces/TPieceLeft.tsx","Components/Corners/CornerLeftTop.tsx","Components/Corners/CornerLeftBottom.tsx","Components/Corners/CornerRightTop.tsx","Components/Corners/CornerRightBottom.tsx","Components/Snack.tsx","Components/Hackman.tsx","SpielfeldLayout.tsx","Components/Wall.tsx","Types/Koordinate.ts","Components/Spielfeld.tsx","App.tsx","reportWebVitals.tsx","index.tsx"],"names":["Richtung","Coin","className","Empty","HorizontalWall","HorizontalWallRightSideShort","HorizontalWallLeftSideShort","VerticalWall","VerticalWallTS","VerticalWallBottomShort","TPieceBottom","TPieceTop","CornerLeftTop","CornerLeftBottom","CornerRightTop","CornerRightBottom","Snack","Hackman","SpielfeldLayout","Colt","Holl","Tpbo","Cort","Vell","Snac","Vwbs","Hwls","Hwrs","Vwts","Tpls","Tpto","Tprs","Colb","Corb","Empy","Hack","Wall","Koordinate","x","y","this","Spielfeld","props","useState","fields","spielfeld","setSpielfeld","position","setPosition","Keine","bewegungsRichtung","setBewegungsRichtung","useEffect","interval","setInterval","move","clearInterval","getHackmanPosition","length","canMove","Oben","Links","Unten","Rechts","spielfeldCopy","onKeyDown","e","key","toLowerCase","tabIndex","map","row","feld","component","HorizontalWallLS","HorizontalWallRS","VerticalWallBS","TPieceRight","TPieceLeft","CornerLT","CornerLB","CornerRT","CornerRB","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.6620b515.chunk.js","sourcesContent":["enum Richtung {\n  Oben,\n  Unten,\n  Links,\n  Rechts,\n  Keine,\n}\n\nexport default Richtung","\n\nconst Coin: React.FC = () => {\n  return (\n    <div className=\"field\">\n      <div className=\"coin\"></div>\n    </div>\n  );\n};\n\nexport default Coin;","const Empty: React.FC = () => {\n  return <div className=\"empty field\"></div>;\n};\n\nexport default Empty;\n","const HorizontalWall: React.FC = () => {\n    return <div className=\"field\">\n        <div className=\"horizontalWall\"></div>\n    </div>;\n  };\n  \n  export default HorizontalWall;\n  ","const HorizontalWallRightSideShort: React.FC = () => {\n    return <div className=\"field\">\n        <div className=\"horizontalWallRS horizontal\"></div>\n    </div>;\n  };\n  \n  export default HorizontalWallRightSideShort;\n  ","const HorizontalWallLeftSideShort: React.FC = () => {\n    return <div className=\"field\">\n        <div className=\"horizontalWallLS horizontal\"></div>\n    </div>;\n  };\n  \n  export default HorizontalWallLeftSideShort;\n  ","const VerticalWall: React.FC = () => {\n    return <div className=\"field\">        \n        <div className=\"verticalWall\"></div>\n    </div>;\n  };\n  \n  export default VerticalWall;\n  ","const VerticalWallTS: React.FC = () => {\n    return <div className=\"field\">        \n        <div className=\"verticalWallTS vertical\"></div>\n    </div>;\n  };\n  \n  export default VerticalWallTS;","const VerticalWallBottomShort: React.FC = () => {\n    return <div className=\"field\">        \n        <div className=\"verticalWallBS vertical\"></div>\n    </div>;\n  };\n  \n  export default VerticalWallBottomShort;","const TPieceBottom: React.FC = () => {\n    return <div className=\"field\">\n        <div className=\"horizontalWall\"></div>\n        <div className=\"tWallBottom vertical\"></div>\n    </div>;\n  };\n  \n  export default TPieceBottom;\n  ","const TPieceTop: React.FC = () => {\n    return <div className=\"field\">\n        <div className=\"horizontalWall\"></div>\n        <div className=\"tWallTop vertical\"></div>\n    </div>;\n  };\n  \n  export default TPieceTop;\n  ","const TPieceBottom: React.FC = () => {\n    return <div className=\"field\">\n        <div className=\"tWallRight horizontal\"></div>\n        <div className=\"verticalWall\"></div>\n    </div>;\n  };\n  \n  export default TPieceBottom;\n  ","const TPieceBottom: React.FC = () => {\n    return <div className=\"field\">\n        <div className=\"tWallLeft horizontal\"></div>\n        <div className=\"verticalWall\"></div>\n    </div>;\n  };\n  \n  export default TPieceBottom;\n  ","const CornerLeftTop: React.FC = () => {\n    return <div className=\"field\">\n        <div className=\"tWallLeft horizontal\"></div>\n        <div className=\"tWallBottom vertical\"></div>\n    </div>;\n  };\n  \n  export default CornerLeftTop;","const CornerLeftBottom: React.FC = () => {\n    return <div className=\"field\">\n        <div className=\"tWallLeft horizontal\"></div>\n        <div className=\"tWallTop vertical\"></div>\n    </div>;\n  };\n  \n  export default CornerLeftBottom;\n  ","const CornerRightTop: React.FC = () => {\n    return <div className=\"field\">\n        <div className=\"tWallRight horizontal\"></div>\n        <div className=\"tWallBottom vertical\"></div>\n    </div>;\n  };\n  \n  export default CornerRightTop;","const CornerRightBottom: React.FC = () => {\n    return <div className=\"field\">\n        <div className=\"tWallRight horizontal\"></div>\n        <div className=\"tWallTop vertical\"></div>\n    </div>;\n  };\n  \n  export default CornerRightBottom;","const Snack: React.FC = () => {\n    return (\n      <div className=\"field\">\n        <div className=\"snack\"></div>\n      </div>\n    );\n};\n\nexport default Snack;","\nconst Hackman: React.FC = () => {\n    return (\n      <div className=\"field\">\n        <div className=\"hackman\"></div>\n      </div>\n    );\n  };\n  \n  export default Hackman;","import Coin from \"./Components/Coin\";\nimport Empy from \"./Components/Empty\";\nimport Holl from \"./Components/HorizontalWalls/HorizontalWall\";\nimport Hwrs from \"./Components/HorizontalWalls/HorizontalWallRightSideShort\";\nimport Hwls from \"./Components/HorizontalWalls/HorizontalWallLeftSideShort\";\nimport Vell from \"./Components/VerticalWalls/VerticalWall\";\nimport Vwts from \"./Components/VerticalWalls/VerticalWallTopShort\";\nimport Vwbs from \"./Components/VerticalWalls/VerticalWallBottomShort\";\nimport Tpbo from \"./Components/TPieces/TPieceBottom\";\nimport Tpto from \"./Components/TPieces/TPieceTop\";\nimport Tprs from \"./Components/TPieces/TPieceRight\";\nimport Tpls from \"./Components/TPieces/TPieceLeft\";\nimport Colt from \"./Components/Corners/CornerLeftTop\";\nimport Colb from \"./Components/Corners/CornerLeftBottom\";\nimport Cort from \"./Components/Corners/CornerRightTop\";\nimport Corb from \"./Components/Corners/CornerRightBottom\";\nimport Snac from \"./Components/Snack\";\nimport Hack from \"./Components/Hackman\";\nimport React from 'react';\n\nconst SpielfeldLayout = () => {\n    let fields: React.FC[][] = [\n        [Colt, Holl, Holl, Holl, Holl, Tpbo, Holl, Holl, Holl, Holl, Tpbo, Holl, Holl, Holl, Holl, Tpbo, Holl, Holl, Holl, Holl, Cort],\n        [Vell, Snac, Coin, Coin, Coin, Vell, Coin, Coin, Coin, Coin, Vwbs, Coin, Coin, Coin, Coin, Vell, Coin, Coin, Coin, Snac, Vell],\n        [Vell, Coin, Hwls, Hwrs, Coin, Vwbs, Coin, Hwls, Hwrs, Coin, Coin, Coin, Hwls, Hwrs, Coin, Vwbs, Coin, Hwls, Hwrs, Coin, Vell],\n        [Vell, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Vwts, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Vell],\n        [Tpls, Cort, Coin, Hwls, Holl, Holl, Holl, Hwrs, Coin, Hwls, Tpto, Hwrs, Coin, Hwls, Holl, Holl, Holl, Hwrs, Coin, Colt, Tprs],\n        [Vell, Vell, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Snac, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Vell, Vell],\n        [Colb, Corb, Coin, Vwts, Coin, Colt, Cort, Coin, Colt, Hwrs, Empy, Hwls, Cort, Coin, Colt, Cort, Coin, Vwts, Coin, Colb, Corb],\n        [Empy, Empy, Coin, Vell, Coin, Vell, Vell, Coin, Vell, Empy, Empy, Empy, Vell, Coin, Vell, Vell, Coin, Vell, Coin, Empy, Empy],\n        [Hwls, Hwrs, Coin, Vell, Coin, Vell, Vell, Coin, Vell, Empy, Empy, Empy, Vell, Coin, Vell, Vell, Coin, Vell, Coin, Hwls, Hwrs],\n        [Empy, Empy, Coin, Vell, Coin, Vell, Vell, Coin, Vell, Empy, Empy, Empy, Vell, Coin, Vell, Vell, Coin, Vell, Coin, Empy, Empy],\n        [Colt, Hwrs, Coin, Vwbs, Coin, Colb, Corb, Coin, Colb, Holl, Tpbo, Holl, Corb, Coin, Colb, Corb, Coin, Vwbs, Coin, Hwls, Cort],\n        [Vell, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Vwbs, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Coin, Vell],\n        [Vell, Coin, Hwls, Hwrs, Coin, Vwts, Coin, Hwls, Hwrs, Coin, Hack, Coin, Hwls, Hwrs, Coin, Vwts, Coin, Hwls, Hwrs, Coin, Vell],\n        [Vell, Snac, Coin, Coin, Coin, Vell, Coin, Coin, Coin, Coin, Vwts, Coin, Coin, Coin, Coin, Vell, Coin, Coin, Coin, Snac, Vell],\n        [Colb, Holl, Holl, Holl, Holl, Tpto, Holl, Holl, Holl, Holl, Tpto, Holl, Holl, Holl, Holl, Tpto, Holl, Holl, Holl, Holl, Corb]\n    ]\n\n    return fields;\n}\n\nexport default SpielfeldLayout;\n","const Wall: React.FC = () => {\n  return <div className=\"wall field\"></div>;\n};\n\nexport default Wall;\n","class Koordinate {\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  static Empty(): Koordinate {\n    return new Koordinate(0, 0);\n  }\n\n  x: number;\n  y: number;\n}\n\nexport default Koordinate","import Coin from \"./Coin\";\nimport Empty from \"./Empty\";\nimport Hackman from \"./Hackman\";\nimport Wall from \"./Wall\";\nimport VerticalWall from \"./VerticalWalls/VerticalWall\";\nimport VerticalWallTS from \"./VerticalWalls/VerticalWallTopShort\";\nimport VerticalWallBS from \"./VerticalWalls/VerticalWallBottomShort\";\nimport HorizontalWall from \"./HorizontalWalls/HorizontalWall\";\nimport HorizontalWallRS from \"./HorizontalWalls/HorizontalWallRightSideShort\";\nimport HorizontalWallLS from \"./HorizontalWalls/HorizontalWallLeftSideShort\";\nimport TPieceBottom from \"./TPieces/TPieceBottom\";\nimport TPieceTop from \"./TPieces/TPieceTop\";\nimport TPieceRight from \"./TPieces/TPieceRight\";\nimport TPieceLeft from \"./TPieces/TPieceLeft\";\nimport CornerLT from \"./Corners/CornerLeftTop\";\nimport CornerLB from \"./Corners/CornerLeftBottom\";\nimport CornerRT from \"./Corners/CornerRightTop\";\nimport CornerRB from \"./Corners/CornerRightBottom\";\nimport Hack from \"./Hackman\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Koordinate from \"../Types/Koordinate\";\nimport Richtung from \"../Types/Richtung\";\nimport Snack from \"./Snack\";\n\ninterface ISpielfeldProps {\n  fields: React.FC[][];\n}\n\nconst renderComponent = (component: React.FC, key: number) => {\n  if (component === Wall) return <Wall key={key} />;\n  else if (component === HorizontalWall) return <HorizontalWall key={key} />;\n  else if (component === HorizontalWallLS)\n    return <HorizontalWallLS key={key} />;\n  else if (component === HorizontalWallRS)\n    return <HorizontalWallRS key={key} />;\n  else if (component === VerticalWall) return <VerticalWall key={key} />;\n  else if (component === VerticalWallBS) return <VerticalWallBS key={key} />;\n  else if (component === VerticalWallTS) return <VerticalWallTS key={key} />;\n  else if (component === TPieceBottom) return <TPieceBottom key={key} />;\n  else if (component === TPieceTop) return <TPieceTop key={key} />;\n  else if (component === TPieceRight) return <TPieceRight key={key} />;\n  else if (component === TPieceLeft) return <TPieceLeft key={key} />;\n  else if (component === CornerLT) return <CornerLT key={key} />;\n  else if (component === CornerLB) return <CornerLB key={key} />;\n  else if (component === CornerRT) return <CornerRT key={key} />;\n  else if (component === CornerRB) return <CornerRB key={key} />;\n  else if (component === Coin) return <Coin key={key} />;\n  else if (component === Hackman) return <Hackman key={key} />;\n  else if (component === Snack) return <Snack key={key} />;\n  else if (component === Empty) return <Empty key={key} />;\n  else return undefined;\n};\n\nconst Spielfeld: React.FC<ISpielfeldProps> = (props) => {\n  const [spielfeld, setSpielfeld] = useState<React.FC<{}>[][]>(props.fields);\n  const [position, setPosition] = useState(Koordinate.Empty());\n  const [bewegungsRichtung, setBewegungsRichtung] = useState<Richtung>(\n    Richtung.Keine\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => move(), 250);\n    return () => clearInterval(interval);\n  });\n\n  const handleKeyDown = (e: React.KeyboardEvent): void => {\n    setPosition(getHackmanPosition());\n\n    if (e.key.toLowerCase() === \"w\" || e.key === \"ArrowUp\")\n      setBewegungsRichtung(Richtung.Oben);\n    else if (e.key.toLowerCase() === \"a\" || e.key === \"ArrowLeft\")\n      setBewegungsRichtung(Richtung.Links);\n    else if (e.key.toLowerCase() === \"s\" || e.key === \"ArrowDown\")\n      setBewegungsRichtung(Richtung.Unten);\n    else if (e.key.toLowerCase() === \"d\" || e.key === \"ArrowRight\")\n      setBewegungsRichtung(Richtung.Rechts);\n  };\n\n  const getHackmanPosition = (): Koordinate => {\n    let position: Koordinate = Koordinate.Empty();\n\n    for (let y = 0; y < spielfeld.length; y++) {\n      for (let x = 0; x < spielfeld[y].length; x++) {\n        if (spielfeld[y][x] === Hack) {\n          position.x = x;\n          position.y = y;\n        }\n      }\n    }\n    return position;\n  };\n\n  const canMove = (): boolean => {\n    setPosition(getHackmanPosition());\n\n    switch (bewegungsRichtung) {\n      case Richtung.Oben: {\n        return (\n          spielfeld[position.y - 1][position.x] === Empty ||\n          spielfeld[position.y - 1][position.x] === Coin ||\n          spielfeld[position.y - 1][position.x] === Snack\n        );\n      }\n      case Richtung.Links: {\n        return (\n          spielfeld[position.y][position.x - 1] === Empty ||\n          spielfeld[position.y][position.x - 1] === Coin ||\n          spielfeld[position.y][position.x - 1] === Snack\n        );\n      }\n      case Richtung.Unten: {\n        return (\n          spielfeld[position.y + 1][position.x] === Empty ||\n          spielfeld[position.y + 1][position.x] === Coin ||\n          spielfeld[position.y + 1][position.x] === Snack\n        );\n      }\n      case Richtung.Rechts: {\n        return (\n          spielfeld[position.y][position.x + 1] === Empty ||\n          spielfeld[position.y][position.x + 1] === Coin ||\n          spielfeld[position.y][position.x + 1] === Snack\n        );\n      }\n      default:\n        return false;\n    }\n  };\n\n  const move = () => {\n    let spielfeldCopy: React.FC<{}>[][] = spielfeld;\n    setPosition(getHackmanPosition());\n\n    switch (bewegungsRichtung) {\n      case Richtung.Oben: {\n        if (canMove()) {\n          spielfeldCopy[position.y][position.x] = Empty;\n          spielfeldCopy[position.y - 1][position.x] = Hack;\n          setSpielfeld(spielfeldCopy);\n        }\n        break;\n      }\n      case Richtung.Links: {\n        if (canMove()) {\n          spielfeldCopy[position.y][position.x] = Empty;\n          spielfeldCopy[position.y][position.x - 1] = Hack;\n\n          setSpielfeld(spielfeldCopy);\n        }\n        break;\n      }\n      case Richtung.Unten: {\n        if (canMove()) {\n          spielfeldCopy[position.y][position.x] = Empty;\n          spielfeldCopy[position.y + 1][position.x] = Hack;\n\n          setSpielfeld(spielfeldCopy);\n        }\n        break;\n      }\n      case Richtung.Rechts: {\n        if (canMove()) {\n          spielfeldCopy[position.y][position.x] = Empty;\n          spielfeldCopy[position.y][position.x + 1] = Hack;\n          setSpielfeld(spielfeldCopy);\n        }\n        break;\n      }\n    }\n  };\n\n  return (\n    <div className=\"App center\" onKeyDown={handleKeyDown} tabIndex={0}>\n      {spielfeld.map((row, x) => {\n        return (\n          <div className=\"row\" key={x}>\n            {row.map((feld, y) => {\n              return renderComponent(feld, y);\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Spielfeld;\n","import SpielfeldLayout from \"./SpielfeldLayout\";\nimport Spielfeld from \"./Components/Spielfeld\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\nconst App: React.FC = () => {\n  const [spielfeld] = useState<React.FC<{}>[][]>(SpielfeldLayout);\n\n  return <Spielfeld fields={spielfeld} />;\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals(console.log);\n"],"sourceRoot":""}